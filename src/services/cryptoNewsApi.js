import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';

const cryptoNewsAPIHeaders = {

    'x-bingapis-sdk': 'true',
    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',
    'x-rapidapi-key': '13e2810994msh948dfb418dee1e4p1ef656jsn70c2441337be'
  }

  const baseUrl = 'https://bing-news-search1.p.rapidapi.com'

  // Utility fn() to add URL and the corresponding header
const createRequest = url => ({ url, headers: cryptoNewsAPIHeaders });
  
export const cryptoNewsApi = createApi({
    reducerPath: 'cryptoNewsApi', // What is this reducer for
    baseQuery: fetchBaseQuery({ baseUrl }),

    // Endpoints = A fn(), where a builder is available as the 1st param, which is fn() that returns an obj, within which the names of the-
    //- endpoints can be mentioned/specified
    endpoints: (builder) => ({
        getCryptoNews: builder.query({
            // To make this request, the header should also be passed. The URL and the header are added to the call using an utility fn() 
            query: ({ newsCategory , count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=off&textFormat=Raw&freshness=Day&count=${count}`),
        }),
    })
});

// Export the getCryptos query, using the hooks generated by Redux toolkit, that can be call instantly, to get all the data for the query
// Thee hooks make data retrival simpler, with some states like data, loading, isFetching...
export const { useGetCryptoNewsQuery } = cryptoNewsApi;